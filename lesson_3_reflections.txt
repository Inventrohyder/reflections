When would you want to use a remote repository rather than keeping all your work
local?

    When working in a team and collaborating with many people at the same time.
    While working on multiple work stations. That could is on multiple devices
    in different locations.
    A remote repository can also be used as a backup.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    When done automatically, there are higher chances of introducing bugs. The
    pros and cons are more similar to committing manually or automatically 
    saving. This also includes the problems that may occur due to limited 
    internet connections in parts of the world. The constant updating through
    the internet may use up ones bandwidth a lot; making it inconvenient.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are save points that create a new line of development. 
    It is very useful when tyring out new features or different executions 
    of something to find out the better one. Mainly used to develop stuff
    differently from the main project to ensure the main one remains working.
    Clones are copies of a repostitory from a remote repository to a local 
    computer or from the same local computer to a different location on that
    computer. It is very useful when sharing your repository to other computers
    in order for everyone or for you to be able to work on the project on 
    different work stations.
    Forking is the same as cloning but it happens on git hub servers. It
    copies one person's repository from their github account to your github
    account.It is useful when you want to modify someone's project without
    having to access their project. It also gives the person who was forked
    credit for their original project.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This allows git to know if changes have been made locally that are not
    yet pushed to the remote repository or changes in the remote that are not
    yet in the local repository. Therefore it can help you recognize by how 
    many commits the local repository is ahead, behind or out of sync with 
    the remote repository.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without git or github I would personally may be use google drive to
    collaborate because it is the other thing that I know that can allow
    sharing of files. Although there is also one drive and stuff like 
    dropbox. However, there are other methods I have heard of like 
    subversion, mercurial, etc. Also there are sites like bitbucket, e.t.c.
    Though if we have to not use any form of version-control, then we will
    have to use flashdisks and stuff to have each person create their part
    then we bring it to compare our changes and collaborate on a single 
    project.
    Using a good form of version-control like git with github makes it
    way much easier and this is much more simpler. Using flashdisks in this
    scenario is what is hardest.
    Git and github are way much better.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
